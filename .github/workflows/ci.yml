name: CI
on:
  pull_request:
  push:
    branches:
      - master
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  RUNNER_NODE_VERSION: 22
jobs:
  install_deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.RUNNER_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.RUNNER_NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dependencies
        run: pnpm install --frozen-lockfile
  
  typecheck:
    runs-on: ubuntu-latest
    needs: install_deps
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.RUNNER_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.RUNNER_NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: typecheck
        run: pnpm run typecheck
  
  lint:
    runs-on: ubuntu-latest
    needs: install_deps
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.RUNNER_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.RUNNER_NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: lint
        run: pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs: install_deps
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.RUNNER_NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.RUNNER_NODE_VERSION }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: build
        run: pnpm run build
      
  test:
    runs-on: ubuntu-latest
    needs: install_deps
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: install dependencies
        run: pnpm install --frozen-lockfile
      - name: test
        run: pnpm run test
  test_result:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ always() }}
    steps:
      - run: exit 1
        if: ${{ needs.test.result != 'success' }}
